package application;

public class MotionPattern {
	private static final int TYPE_LEN = 1;
	private static final int SIZE_LEN = 2;
	private static final int DEL_LEN = 1;
	private static final int SHORT_LEN = 1;
	private static final byte MSG_TYPE = 1;
	private static final byte FREQ_TYPE = 2;
	private static final byte AMP_TYPE = 3;
	private short length;
	private byte[] piezoStackA;
	private byte[] piezoStackB;
	private byte[] piezoStackC;
	private short frequency;
	private short amplitude;

	public MotionPattern() {
		// TODO Auto-generated constructor stub
	}
	
	public void setFrequency(short freq) {
		this.frequency = freq;
	}
	
	public void setAmplitude(short amp) {
		this.amplitude = amp;
	}
	
	public byte[] getAmplitudeMessage() {
		byte[] msg = new byte[TYPE_LEN + SHORT_LEN];
		
		msg[0] = AMP_TYPE;
		
		return msg;
	}
	
	public byte[] getFrequencyMessage() {
		byte[] msg = new byte[TYPE_LEN + SHORT_LEN];
		
		msg[0] = FREQ_TYPE;
		
		return msg;
	}
	
	public byte[] getPatternMessage() {
		byte[] msg = new byte[TYPE_LEN + SIZE_LEN +
		                      length + DEL_LEN +
		                      length + DEL_LEN +
		                      length + DEL_LEN];
		
		msg[0] = MSG_TYPE;
		for (int i = 0; i < SIZE_LEN; i++) {
			int bitShift = i * 8;
			int mask = ((1 << 8) - 1) << bitShift;
			msg[i] = (byte) ((mask | length) >> bitShift);
		}
		
		return msg;
	}
}
